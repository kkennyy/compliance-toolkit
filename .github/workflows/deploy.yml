name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install
          npm install -D @jridgewell/gen-mapping postcss postcss-import postcss-nesting @tailwindcss/forms tailwindcss-animate autoprefixer

      - name: Create config files
        run: |
          cat > postcss.config.cjs << 'EOL'
          module.exports = {
            plugins: [
              require('postcss-import'),
              require('tailwindcss'),
              require('autoprefixer'),
            ]
          }
          EOL

          cat > tailwind.config.cjs << 'EOL'
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              "./index.html",
              "./src/**/*.{js,ts,jsx,tsx}",
            ],
            theme: {
              extend: {},
            },
            plugins: [
              require('@tailwindcss/forms'),
              require('tailwindcss-animate'),
            ],
          }
          EOL

          cat > vite.config.js << 'EOL'
          import { defineConfig } from 'vite'
          import react from '@vitejs/plugin-react'
          import path from 'path'

          export default defineConfig({
            plugins: [react()],
            base: '/compliance-toolkit/',
            build: {
              sourcemap: true
            },
            resolve: {
              alias: {
                '@': path.resolve(__dirname, './src'),
              },
            },
          })
          EOL

      - name: Build
        run: npm run build
        env:
          CI: false

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
